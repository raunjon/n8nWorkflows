{
  "name": "YouTube-Contextual-RAG",
  "nodes": [
    {
      "parameters": {
        "functionCode": "const jsonArray = $json.transcripts\nconst chunkSize = 20\nconst result = [];\n  \n  // Process array in chunks of specified size\n  for (let i = 0; i < jsonArray.length; i += chunkSize) {\n    // Get the current chunk (up to chunkSize items)\n    const chunk = jsonArray.slice(i, Math.min(i + chunkSize, jsonArray.length));\n    \n    if (chunk.length === 0) continue;\n    \n    // Concatenate all text fields with a space\n    const combinedText = chunk.map(item => item.text).join(' ');\n    \n    // Get start time from first item\n    const startTime = chunk[0].start;\n    \n    // Calculate end time from last item (start + duration)\n    const lastItem = chunk[chunk.length - 1];\n    const endTime = lastItem.start + lastItem.duration;\n    \n    // Create the combined object\n    const combinedObject = {\n      text: combinedText,\n      start: startTime,\n      end_time: endTime,\n      items_count: chunk.length // Optional: track how many items were combined\n    };\n    \n    result.push(combinedObject);\n  }\n  \n  return {data: result};"
      },
      "id": "751e26e4-60cd-4c96-9ced-8361c08d480e",
      "name": "processTranscript",
      "type": "n8n-nodes-base.function",
      "position": [
        -3872,
        1232
      ],
      "typeVersion": 1,
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://www.searchapi.io/api/v1/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "engine",
              "value": "youtube_transcripts"
            },
            {
              "name": "api_key",
              "value": "AQ8ZC6wTxvPToEgsgZfaXqYJ"
            },
            {
              "name": "video_id",
              "value": "={{ $json.vid }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4096,
        1312
      ],
      "id": "6d1c1b50-e8d4-4957-a495-3d4b4b557dde",
      "name": "Get Video Transcript"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.video.description }}",
        "options": {
          "systemMessage": "You are an AI agent that extracts only video-relevant content from YouTube video descriptions. Your task is to remove all promotional, channel-related, and unrelated information while preserving content that directly relates to the specific video. \nInstructions:\nEXTRACT ONLY:\n\nVideo-specific content (what the video is about, topics covered, key points)\nEducational or informational content directly related to the video topic\nVideo timestamps and chapter markers\nCredits specific to this video (guests, collaborators, specific sources)\nTechnical details, specifications, or data mentioned in the video\nDirect video content summaries or abstracts\n\nREMOVE COMPLETELY:\n\nChannel subscription requests (\"Subscribe to my channel\", \"Hit the bell icon\", etc.)\nGeneral channel promotion and branding\nSocial media links and handles (unless directly related to video content)\nGeneric channel descriptions (\"Welcome to my channel where we...\")\nOther video recommendations from the same channel\nPlaylist promotions\nMerchandise or product sales pitches\nPatron/sponsor acknowledgments (unless specific to video content)\nGeneral contact information\nStandard disclaimers and legal text\nGeneric calls-to-action unrelated to video content\nChannel statistics or achievements\nUpload schedules or channel announcements\n\nOutput Rules:\n\nIf relevant content exists: Return only the cleaned, video-specific content\nIf no relevant content exists: Return an empty string \"\"\nPreserve formatting: Keep line breaks and structure for readability when content exists\nBe strict: When in doubt, remove it. Only include content that directly serves someone watching this specific video"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -3648,
        -1056
      ],
      "id": "43a2211d-8d3f-4a0e-a0ed-2c44ce12ff77",
      "name": "Extract Video Description"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3584,
        -832
      ],
      "id": "926c2ea6-ced7-4095-a759-0b46734b7370",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "cHEii3DunkKwuz7x",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi there! ðŸ‘‹\nMy name is Nathan. How can I assist you today? You can ask me any questions about accounting. ",
        "options": {}
      },
      "id": "7d4154a3-eee7-470a-a920-5bfeff7c27d0",
      "name": "Chat Trigger",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -4096,
        -1584
      ],
      "webhookId": "6bd81f9e-79ca-45ef-bbd2-184487539d06"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4",
          "mode": "list",
          "cachedResultName": "ad_rag_links",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "link": "={{ $('Code').item.json.link }}",
            "title": "={{ $('Get Video Information').item.json.video.title }}",
            "vid": "={{ $('Code').item.json.vid }}",
            "description": "={{ $json.output }}"
          },
          "matchingColumns": [
            "link"
          ],
          "schema": [
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "vid",
              "displayName": "vid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -3296,
        -1056
      ],
      "id": "5a61a65c-7186-46a4-9b35-921d78361d0c",
      "name": "Append or update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4",
          "mode": "list",
          "cachedResultName": "ad_rag_links",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 288960066,
          "mode": "list",
          "cachedResultName": "Sheet2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit#gid=288960066"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "transcript"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -3200,
        1312
      ],
      "id": "e792561f-0938-49d1-8749-5269d578418e",
      "name": "Get row(s) in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst input = $input.first().json.url\nconst videoId = input.match(/[?&]v=([^&]+)/)[1];\n\nreturn {link: input, vid:videoId}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4096,
        -1056
      ],
      "id": "0aa63fd4-9f8f-4e88-b6ff-3e4d8774dbd4",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "## RAG AI Agent with Contextual Retrieval",
        "height": 485,
        "width": 1036
      },
      "id": "deb6c3c6-6772-4782-ad8b-b45901aed8f8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4192,
        -1696
      ]
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=## Role\n\nYou are a Retrieval-Augmented Generation (RAG) assistant designed to answer questions a user has. You use a corpus of transcripts from multiple YouTube lectures that are all text based. Your primary goal is to provide accurate, up-to-date, and relevant information based on what the user asks and the lecture transcripts you retrieve.\n\n## Responsibilities\n\nAnswer user queries with a good mix of being comprehensive but still concise\nPresent information in an easy-to-understand and professional manner\nClarify misconceptions or misinformation\nAlways include proper references to source videos with timestamps at the end of your response\n\n## Reference Format\n\nAt the end of each answer, include a \"References\" section that lists:\n\nVideo title\nTimestamp (if available)\nFormat: \"References:\\n- [Video Title] - [Timestamp]\"\n\n## Other Key Information and Instructions\n\nAlways tell the user if you didn't find the answer. Don't make something up just to please them.\nKeep your language neutral and factual. Do not show bias or opinion\nExtract video titles and timestamps from the metadata of retrieved transcript segments\nIf multiple video sources are used, list all relevant references\n\n## Error Handling\n\nIf the information cannot be found using the provided instructions respond with:\n\"I'm sorry, I couldn't find relevant information based on the available YouTube lecture transcripts.\"\nIf video metadata is incomplete, still provide whatever reference information is available (e.g., just video title if timestamp is missing)\n"
        }
      },
      "id": "b4d103d2-f2e0-420e-b381-9af1bf7442b8",
      "name": "RAG AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -3712,
        -1792
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3600,
        -1360
      ],
      "id": "4c5cb4bd-3743-44a7-a606-3249385b5837",
      "name": "Embeddings OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "cHEii3DunkKwuz7x",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -3744,
        -1568
      ],
      "id": "e3a3f671-6dc6-43c3-bd4c-15170dcdc9e5",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3872,
        -1568
      ],
      "id": "919d152c-d17a-45af-bcdb-b9d9aeef5780",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "cHEii3DunkKwuz7x",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.rerankerCohere",
      "typeVersion": 1,
      "position": [
        -3472,
        -1360
      ],
      "id": "961d33d2-5845-4ba9-8a7e-d40109fdff83",
      "name": "Reranker Cohere",
      "credentials": {
        "cohereApi": {
          "id": "KPx9KY02vBAdJ1ab",
          "name": "CohereApi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "use this tool to get course content from documents",
        "pineconeIndex": {
          "__rl": true,
          "value": "youtube-contextual-rag",
          "mode": "list",
          "cachedResultName": "youtube-contextual-rag"
        },
        "topK": 10,
        "useReranker": true,
        "options": {
          "pineconeNamespace": "youtube-context"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        -3616,
        -1568
      ],
      "id": "e474bdfb-8b1d-4f05-b5d2-3edeb58be375",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "WwDeG34evNN4etxR",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://www.searchapi.io/api/v1/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "engine",
              "value": "youtube_video"
            },
            {
              "name": "api_key",
              "value": "=GDGcaDNSUznCGNDsimXsUiUJ"
            },
            {
              "name": "video_id",
              "value": "={{ $json.vid }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3872,
        -1056
      ],
      "id": "6e9c0289-f437-4bcf-a59b-992b5eba7f07",
      "name": "Get Video Information"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4",
          "mode": "list",
          "cachedResultName": "ad_rag_links",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 288960066,
          "mode": "list",
          "cachedResultName": "Sheet2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit#gid=288960066"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "link": "={{ $('Get row(s) in sheet1').item.json.link }}",
            "transcript": "={{$('processTranscript').item.json.data}}",
            "full_transcript": "={{ $json.transcript.toJsonString() }}"
          },
          "matchingColumns": [
            "link"
          ],
          "schema": [
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "vid",
              "displayName": "vid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "processed",
              "displayName": "processed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transcript",
              "displayName": "transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "full_transcript",
              "displayName": "full_transcript",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -3424,
        1232
      ],
      "id": "5f92015f-4824-42c0-aa58-0dd499c51089",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nvar full_text = \"\"\nfor (const item of $json.data) {\n  full_text += item.text\n}\n\nreturn {transcript: full_text}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3648,
        1232
      ],
      "id": "6b0845f7-b423-451a-8dde-c551a1c360b4",
      "name": "Code1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4",
          "mode": "list",
          "cachedResultName": "ad_rag_links",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 288960066,
          "mode": "list",
          "cachedResultName": "Sheet2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit#gid=288960066"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "id",
              "lookupValue": "12"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -4096,
        48
      ],
      "id": "802a4a25-f3df-467c-ad37-d03362a8df97",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst str = $input.first().json.full_transcript\n\nconst arr = JSON.parse($input.first().json.transcript);\n\n\nlet clean = str.replace(/\\\\\"/g, '\"');\n\n// OR if you just want to remove the wrapping quotes:\nclean = clean.replace(/^\"|\"$/g, '');\n\nreturn {transcript: clean, chunks: arr}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3872,
        48
      ],
      "id": "bef7befc-f1da-49e5-a949-233a8e8f7d4b",
      "name": "Code2",
      "executeOnce": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "chunks",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -3648,
        48
      ],
      "id": "64725471-78be-4e14-a21f-57588a9e3ea5",
      "name": "Split Out"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<document> \n{{ $('Code2').item.json.transcript }}\n</document>\nHere is the chunk we want to situate within the whole document \n<chunk> \n{{ $json.text }}\n</chunk> \nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. "
      },
      "id": "a57b2238-e3ee-423d-8235-2894cb9ad989",
      "name": "Generate Contextual Text",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        -3424,
        48
      ],
      "alwaysOutputData": false,
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3360,
        272
      ],
      "id": "3b664cd4-3288-432e-8a48-c62f5544d3f1",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "cHEii3DunkKwuz7x",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA",
          "mode": "list",
          "cachedResultName": "ep1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1965907771,
          "mode": "list",
          "cachedResultName": "Sheet12",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA/edit#gid=1965907771"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "timestamp": "={{ $json.timestamp }}",
            "context": "={{ $('Generate Contextual Text').item.json.text }}",
            "chunk": "={{ $('Split Out').item.json.text }}",
            "id": "={{ $('Split Out').item.json.start }}",
            "starttime": "={{ $('Split Out').item.json.start }}",
            "endtime": "={{ $('Split Out').item.json.end_time }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chunk",
              "displayName": "chunk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "context",
              "displayName": "context",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "starttime",
              "displayName": "starttime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "endtime",
              "displayName": "endtime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -2848,
        48
      ],
      "id": "6308d473-66f2-4bcf-ac03-44a850c9823b",
      "name": "Append or update row in sheet3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "youtube-contextual-rag",
          "mode": "list",
          "cachedResultName": "youtube-contextual-rag"
        },
        "options": {
          "pineconeNamespace": "youtube-context"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        -3616,
        592
      ],
      "id": "c03e0b2e-a1d9-4faa-b3bb-314a05bd641b",
      "name": "Pinecone Vector Store2",
      "credentials": {
        "pineconeApi": {
          "id": "WwDeG34evNN4etxR",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{\n{\n  \"content\": `${ $json.context }\\n---\\n${ $json.chunk }`\n}\n}}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=videoTitle",
                "value": "={{ $('Get row(s) in sheet3').item.json.title }}"
              },
              {
                "name": "videoURL",
                "value": "=https://youtube.com/watch?v={{ $('Get row(s) in sheet3').item.json.url }}"
              },
              {
                "name": "timeestamp",
                "value": "={{ $('Get row(s) in sheet3').item.json.timestamp }}"
              }
            ]
          }
        }
      },
      "id": "a988b3be-409e-4ef2-ad41-dc37ea95c2a3",
      "name": "Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -3520,
        816
      ]
    },
    {
      "parameters": {
        "chunkSize": 20000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -3440,
        1024
      ],
      "id": "4aa8b139-1f07-4c9e-b8c4-589b983e006d",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "  const mins = Math.floor($('Split Out').first().json.start / 60);\n  const secs = Math.floor($('Split Out').first().json.start % 60)\n    .toString()\n    .padStart(2, \"0\");\n\n  const emins = Math.floor($('Split Out').first().json.end_time / 60);\n  const esecs = Math.floor($('Split Out').first().json.end_time % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return {timestamp:`${mins}:${secs}` + \"-\" + `${emins}:${esecs}`}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3072,
        48
      ],
      "id": "9a9b4f95-0a22-446e-85c7-487f0f201432",
      "name": "Code3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3648,
        816
      ],
      "id": "e0d7482c-dde6-4fa4-936f-9a8b983ca678",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "cHEii3DunkKwuz7x",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA",
          "mode": "list",
          "cachedResultName": "ep1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1965907771,
          "mode": "list",
          "cachedResultName": "Sheet12",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA/edit#gid=1965907771"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "timestamp": "={{ $json.timestamp }}",
            "id": "={{ $json.id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "chunk",
              "displayName": "chunk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "context",
              "displayName": "context",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "starttime",
              "displayName": "starttime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "endtime",
              "displayName": "endtime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -3648,
        368
      ],
      "id": "9c1512cc-8830-49d1-a0d7-ef0c2d78c237",
      "name": "Append or update row in sheet4",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA",
          "mode": "list",
          "cachedResultName": "ep1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1965907771,
          "mode": "list",
          "cachedResultName": "Sheet12",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA/edit#gid=1965907771"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -4096,
        368
      ],
      "id": "98ce8d3b-73b2-4a08-9ec9-46c3ae54f1e7",
      "name": "Get row(s) in sheet2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "  const mins = Math.floor($json.starttime / 60);\n  const secs = Math.floor($json.starttime % 60)\n    .toString()\n    .padStart(2, \"0\");\n\n  const emins = Math.floor($json.endtime / 60);\n  const esecs = Math.floor($json.endtime % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return {timestamp:`${mins}:${secs}` + \"-\" + `${emins}:${esecs}`, id: $json.id.toString()}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3872,
        368
      ],
      "id": "d3050db4-dfe6-4de1-a009-1bc0ec1e490e",
      "name": "Code4"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA",
          "mode": "list",
          "cachedResultName": "ep1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1805122495,
          "mode": "list",
          "cachedResultName": "Master",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1qbdcS4otV4VZ33aOWdqohxuzJOABmSkNXeEsdbGaPOA/edit#gid=1805122495"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -3872,
        800
      ],
      "id": "df973f71-07cb-4ed9-b1a3-c43234a9d06c",
      "name": "Get row(s) in sheet3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -4096,
        800
      ],
      "id": "92510a4c-9d77-4eb0-a38e-bcbfc8f2bd34",
      "name": "When clicking â€˜Execute workflowâ€™"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        -3328,
        -1568
      ],
      "id": "aeb6ab1f-485e-407a-bb41-e0c3b138f1c3",
      "name": "Think"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4",
          "mode": "list",
          "cachedResultName": "ad_rag_links",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nSYtzZGbr-t7gd5cH-a6l46A_npLUlolKNNue8V1rs4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "link": "={{ $json.metadata.videoURL }}",
            "processed": "true"
          },
          "matchingColumns": [
            "link"
          ],
          "schema": [
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "vid",
              "displayName": "vid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "processed",
              "displayName": "processed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -3744,
        -624
      ],
      "id": "6388271e-4382-4f49-ad80-667e45a2a5b6",
      "name": "Append or update row in sheet",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "P3B60ObBDlGUWB9D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $('processTranscript').item.json.text }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "videoTitle",
                "value": "={{ $('Get row(s) in sheet1').item.json.title }}"
              },
              {
                "name": "videoURL",
                "value": "={{ $('Get row(s) in sheet1').item.json.link }}"
              },
              {
                "name": "timestamp",
                "value": "={{ $('processTranscript').item.json.start }}-{{ $('processTranscript').item.json.end_time }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        -3968,
        -496
      ],
      "id": "0365c781-e51e-4ce1-a19c-82483305a4ae",
      "name": "Default Data Loader2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -4096,
        -496
      ],
      "id": "619f27d3-28ff-4c4f-a364-26d056d57a3e",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "cHEii3DunkKwuz7x",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "youtube-rag",
          "mode": "list",
          "cachedResultName": "youtube-rag"
        },
        "options": {
          "clearNamespace": false,
          "pineconeNamespace": "youtube"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        -4096,
        -720
      ],
      "id": "a52a0b63-0736-4aae-a85b-5468315952a5",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "WwDeG34evNN4etxR",
          "name": "PineconeApi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "processTranscript": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video Transcript": {
      "main": [
        [
          {
            "node": "processTranscript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Video Description": {
      "main": [
        [
          {
            "node": "Append or update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Extract Video Description",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet1": {
      "main": [
        []
      ]
    },
    "Get row(s) in sheet1": {
      "main": [
        [
          {
            "node": "Get Video Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Get Video Information",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Reranker Cohere": {
      "ai_reranker": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_reranker",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Video Information": {
      "main": [
        [
          {
            "node": "Extract Video Description",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Contextual Text",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Generate Contextual Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Contextual Text": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet3": {
      "main": [
        []
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Append or update row in sheet3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet2": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Append or update row in sheet4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet3": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking â€˜Execute workflowâ€™": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store2": {
      "main": [
        []
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader2": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e9be8e20-c7d7-43ae-907e-144a57c96d1b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6114df9fa60673927e640f52a642006ef4b43f3523add3de0115435b93c3887b"
  },
  "id": "RdJe4KEyOz3lmihH",
  "tags": []
}